<Window x:Class="UI.MenuModalView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        MinHeight="600"
        MinWidth="600"
        Width="600"
        Height="600"
        MaxHeight="600"
        MaxWidth="600"
        SizeToContent="WidthAndHeight"
        ResizeMode="NoResize"
        WindowStyle="None"
        WindowStartupLocation="CenterOwner"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UI"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="Elevator System Picker"
        Style="{StaticResource modalWindow}"
        x:Name="menuModal">

    <Window.DataContext>
        <local:MenuModalViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <Style x:Key="deleteButton" TargetType="{x:Type Button}">
            <Style.Setters>
                <Setter Property="Content" Value="&#x1F5D1;"/>
                <Setter Property="ToolTip" Value="Delete this item"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Margin" Value="20,10,40,0"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
            </Style.Setters>
            
        </Style>

        <Style x:Key="itemStyle" TargetType="{x:Type Button}">
            <Style.Setters>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Padding" Value="10,5,5,5"/>
                <Setter Property="FontSize" Value="14"/>
            </Style.Setters>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Style.Setters>
                <Setter Property="Width" Value="100"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Margin" Value="10,3,40,4"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="MinHeight" Value="20"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style.Setters>
        </Style>

        <Style TargetType="{x:Type TextBlock}">
            <Style.Setters>
            </Style.Setters>
        </Style>

        <Style TargetType="{x:Type Label}">
            <Style.Setters>
                <Setter Property="Margin" Value="10,3,40,4"/>
                <Setter Property="FontSize" Value="14"/>
            </Style.Setters>
        </Style>

        <DataTemplate x:Key="elevatorPickerDataTemplate" DataType="{x:Type local:MenuModalViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="4*"/>
                </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0">
                        <TextBlock Text="Elevators" FontSize="20" Margin="20"/>

                        <Grid MaxHeight="{Binding MaxHeight, ElementName=menuModal, Converter={StaticResource substracterConverter}, ConverterParameter=120}">
                            <ScrollViewer Grid.Column="0" HorizontalScrollBarVisibility="auto" VerticalScrollBarVisibility="auto" >
                                <ScrollViewer.Resources>
                                    <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">5</sys:Double>
                                </ScrollViewer.Resources>
                                <Grid>
                                <ItemsControl ItemsSource="{Binding Path=Elevators}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="{x:Type local:ElevatorInModalViewModel}">
                                            <Border BorderBrush="black" BorderThickness="0.5" Margin="0.5">
                                                <Button Content="Elevator"
                                                        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=DataContext.SelectCommand}"
                                                        CommandParameter="{Binding}">
                                                    <Button.Style>
                                                        <Style BasedOn="{StaticResource itemStyle}" TargetType="{x:Type Button}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Path=DataContext.IsSelected}"
                                                                             Value="True">
                                                                    <Setter Property="Background" Value="FloralWhite"/>
                                                                </DataTrigger>

                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Path=DataContext.IsSelected}"
                                                                             Value="False">
                                                                    <Setter Property="Background" Value="BlanchedAlmond"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style> 
                                                </Button>
                                            </Border>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                </Grid>
                            </ScrollViewer>
                        </Grid>
                    </StackPanel>

                <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch"/>

                <ScrollViewer Grid.Column="2" HorizontalScrollBarVisibility="auto" VerticalScrollBarVisibility="auto">
                    <StackPanel>
                        <Grid>
                            <TextBlock Text="Elevator Parameters" FontSize="20" Margin="20"/>
                            <Button Style="{StaticResource deleteButton}"
                                    IsEnabled="{Binding SelectedElevator, Converter={StaticResource nullToFalseConverter}}"
                                    Command="{Binding DeleteCommand}"
                                    CommandParameter="{Binding SelectedElevator}"/>
                        </Grid>

                        <Grid Visibility="{Binding SelectedElevator, Converter={StaticResource nullToCollapsedConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="55"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Margin="5,0,5,0" Grid.Column="0" Content="Capacity:"/>
                                    <TextBox Margin="0" Grid.Column="1" Text="{Binding SelectedElevator.Capacity}"/>
                                </Grid>
                            </Grid>

                            <Grid Grid.Row="1">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="50"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Content="Load/Unload time:"/>
                                    <TextBox Grid.Column="1" Margin="5,0,5,0" Text="{Binding SelectedElevator.DepartingTime}"/>
                                    <Label Margin="0" Grid.Column="2" Content="s"/>
                                </Grid>
                            </Grid>

                            <Grid Grid.Row="2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="50"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Content="Travel speed:"/>
                                    <TextBox Margin="5,0,5,0" Grid.Column="1" Text="{Binding SelectedElevator.TravelSpeed, Converter={StaticResource cmToMsConverter}}" />
                                    <Label Margin="0" Grid.Column="2" Content="m/s" />
                                </Grid>
                            </Grid>
                        </Grid>
                    </StackPanel>
                </ScrollViewer>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="floorsPickerDataTemplate" DataType="{x:Type local:MenuModalViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="4*"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0">
                    <TextBlock Text="Floors" FontSize="20" Margin="20"/>

                    <Grid MaxHeight="{Binding MaxHeight, ElementName=menuModal, Converter={StaticResource substracterConverter}, ConverterParameter=120}">
                        <ScrollViewer Grid.Column="0" HorizontalScrollBarVisibility="auto" VerticalScrollBarVisibility="auto" >
                            <ScrollViewer.Resources>
                                <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">5</sys:Double>
                            </ScrollViewer.Resources>
                            <Grid>
                                <ItemsControl ItemsSource="{Binding Path=Floors}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="{x:Type local:FloorInModalViewModel}">
                                            <Border BorderBrush="black" BorderThickness="0.5" Margin="0.5">
                                                <Button
                                                    Content="Floor"
                                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=DataContext.SelectCommand}"
                                                    CommandParameter="{Binding}">
                                                    <Button.Style>
                                                        <Style BasedOn="{StaticResource itemStyle}" TargetType="{x:Type Button}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Path=DataContext.IsSelected}"
                                                                             Value="True">
                                                                    <Setter Property="Background" Value="FloralWhite"/>
                                                                </DataTrigger>

                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Path=DataContext.IsSelected}"
                                                                             Value="False">
                                                                    <Setter Property="Background" Value="BlanchedAlmond"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                            </Border>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Grid>
                        </ScrollViewer>
                    </Grid>
                </StackPanel>

                <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch"/>

                <ScrollViewer Grid.Column="2" HorizontalScrollBarVisibility="auto" VerticalScrollBarVisibility="auto">
                    <StackPanel>
                        <Grid>
                            <TextBlock Text="Floor Parameters" FontSize="20" Margin="20"/>
                            <Button Style="{StaticResource deleteButton}"
                                    IsEnabled="{Binding SelectedFloor, Converter={StaticResource nullToFalseConverter}}"
                                    Command="{Binding DeleteCommand}"
                                    CommandParameter="{Binding SelectedFloor}"/>
                        </Grid>

                        <Grid Visibility="{Binding SelectedFloor, Converter={StaticResource nullToCollapsedConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="50"/>
                                </Grid.ColumnDefinitions>

                                <Label Content="Floor height:"/>
                                <TextBox Grid.Column="1" Margin="0,5,0,5" Text="{Binding SelectedFloor.Height}"/>
                                <Label Grid.Column="2" Content="cm" Margin="0,5,0,5"/>
                            </Grid>
                        </Grid>
                    </StackPanel>
                </ScrollViewer>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="populationDataTemplate" DataType="{x:Type local:MenuModalViewModel}">
            <Grid>
                <StackPanel Grid.Column="0">
                    <TextBlock Text="Population parameters" FontSize="20" Margin="20"/>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="300"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                        <Label Content="Requests count: "/>
                        <TextBox Grid.Column="1" Margin="0,4,50,4" Text="{Binding RequestsCount}"/>
                        </Grid>

                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="300"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="50"/>
                            </Grid.ColumnDefinitions>

                            <Label Content="Time to simulate: "/>
                            <TextBox Grid.Column="1" Margin="0,5,0,5" Text="{Binding RequestsTimeSpan}"/>
                            <Label Margin="0,5,0,5" Grid.Column="2" Content="s"/>
                        </Grid>

                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="300"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                        <Label Content="Seed: "/>
                        <TextBox Grid.Column="1" Margin="0,4,50,4" Text="{Binding Seed}"/>
                        </Grid>
                    </Grid>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="algorithmPickerDataTemplate" DataType="{x:Type local:MenuModalViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="4*"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0">
                    <TextBlock Text="Logics" FontSize="20" Margin="20"/>

                    <Grid MaxHeight="{Binding MaxHeight, ElementName=menuModal, Converter={StaticResource substracterConverter}, ConverterParameter=120}">
                        <ScrollViewer Grid.Column="0" HorizontalScrollBarVisibility="auto" VerticalScrollBarVisibility="auto">
                            <ScrollViewer.Resources>
                                <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">5</sys:Double>
                            </ScrollViewer.Resources>
                            <Grid>
                                <ItemsControl ItemsSource="{Binding Path=Algorithms}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="{x:Type local:AlgorithmInModalViewModel}">
                                            <Border BorderBrush="black" BorderThickness="0.5" Margin="0.5">
                                                <Button
                                                    Content="{Binding Name}"
                                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=DataContext.SelectCommand}"
                                                    CommandParameter="{Binding}">
                                                    <Button.Style>
                                                        <Style BasedOn="{StaticResource itemStyle}" TargetType="{x:Type Button}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Path=DataContext.IsSelected}"
                                                                             Value="True">
                                                                    <Setter Property="Background" Value="FloralWhite"/>
                                                                </DataTrigger>

                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Path=DataContext.IsSelected}"
                                                                             Value="False">
                                                                    <Setter Property="Background" Value="BlanchedAlmond"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                            </Border>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Grid>
                        </ScrollViewer>
                    </Grid>
                </StackPanel>

                <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch"/>

                <ScrollViewer Grid.Column="2" HorizontalScrollBarVisibility="auto" VerticalScrollBarVisibility="auto">
                    <StackPanel>
                        <Grid>
                            <TextBlock Text="Algorithms" FontSize="20" Margin="20"/>
                        </Grid>

                        <Grid Visibility="{Binding SelectedAlgorithm, Converter={StaticResource nullToCollapsedConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <Label Grid.Row="0" Content="Algorithm description:"/>
                                <TextBlock Grid.Row="1" Text="{Binding SelectedAlgorithm.Description}"
                                TextAlignment="Justify"
                                           Margin="10"/>
                            </Grid>
                        </Grid>
                    </StackPanel>
                </ScrollViewer>
            </Grid>
        </DataTemplate>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <ContentControl>
                <ContentControl.Style>
                    <Style TargetType="{x:Type ContentControl}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedItem, ElementName=viewComboBox}" Value="Elevators">
                                <Setter Property="ContentTemplate" Value="{StaticResource elevatorPickerDataTemplate}"/>
                                <Setter Property="Content" Value="{Binding}"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding SelectedItem, ElementName=viewComboBox}" Value="Floors">
                                <Setter Property="ContentTemplate" Value="{StaticResource floorsPickerDataTemplate}"/>
                                <Setter Property="Content" Value="{Binding}"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding SelectedItem, ElementName=viewComboBox}" Value="Logic">
                                <Setter Property="ContentTemplate" Value="{StaticResource algorithmPickerDataTemplate}"/>
                                <Setter Property="Content" Value="{Binding}"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding SelectedItem, ElementName=viewComboBox}" Value="Requests">
                                <Setter Property="ContentTemplate" Value="{StaticResource populationDataTemplate}"/>
                                <Setter Property="Content" Value="{Binding}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
        </Grid>

        <Grid Grid.Row="1" Background="FloralWhite">
            <Grid HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="100"/>
                </Grid.ColumnDefinitions>

                <Button x:Name="saveButton"
                        Grid.Column="0"
                        Command="{Binding SaveCommand}"
                        CommandParameter="{Binding Path=., ElementName=menuModal}"
                        Content="Save"
                        IsEnabled="True"
                        Margin="5,10,5,10">
                </Button>

                <Button x:Name="cancelButton"
                        Grid.Column="1"
                        Command="{Binding CancelCommand}"
                        CommandParameter="{Binding Path=., ElementName=menuModal}"
                        Content="Cancel"
                        Margin="5,10,10,10"/>
            </Grid>

            <Grid HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="80"/>
                    <ColumnDefinition Width="110"/>
                </Grid.ColumnDefinitions>

                <Button x:Name="addButton"
                        Grid.Column="0"
                        Command="{Binding AddCommand}"
                        CommandParameter="{Binding SelectedItem, ElementName=viewComboBox}"
                        Content="Add"
                        Margin="10,10,5,10"/>

                <ComboBox x:Name="viewComboBox"
                          Grid.Column="1"
                          SelectedIndex="0"
                          Margin="10,10,5,10">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" Margin="2,3,0,0" FontSize="13"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Grid>

        </Grid>
    </Grid>
</Window>
